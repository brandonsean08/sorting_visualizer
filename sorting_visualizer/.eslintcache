[{"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/reportWebVitals.js":"1","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/index.js":"2","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/App.js":"3","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Components/Header/Header.js":"4","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Components/Charts/BarChart/BarChart.js":"5","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Reducers/rootReducer.js":"6","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Alogrithms/BubbleSort.js":"7","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/constants.js":"8"},{"size":362,"mtime":1603469289000,"results":"9","hashOfConfig":"10"},{"size":971,"mtime":1606306759778,"results":"11","hashOfConfig":"10"},{"size":261,"mtime":1606213956250,"results":"12","hashOfConfig":"10"},{"size":8972,"mtime":1606395632904,"results":"13","hashOfConfig":"10"},{"size":9243,"mtime":1606401589967,"results":"14","hashOfConfig":"10"},{"size":1942,"mtime":1606376811651,"results":"15","hashOfConfig":"10"},{"size":247,"mtime":1606232337360,"results":"16","hashOfConfig":"10"},{"size":292,"mtime":1606329324679,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1cjlg6w",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/reportWebVitals.js",[],["38","39"],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/index.js",["40","41"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// bootstrap related imports\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Redux related imports\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Reducers/rootReducer\";\n\n//Creating our basic redux store with one reducer\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["42","43"],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/App.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Components/Header/Header.js",["44","45","46","47","48","49","50","51","52","53","54","55"],"import { React, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Header.css\";\nimport { algorithms } from \"../../constants\";\n\nclass Header extends Component {\n  state = {\n    inputSize: 20,\n    sortSpeed: 500,\n    isInputSizeValid: true,\n    isSortSpeedValid: true,\n  };\n\n  /**\n   * Method to validate whether our array is between 0 and 100\n   * @param {The size of our unsorted array} inputSize\n   */\n  isValidInputSize(inputSize) {\n    while (inputSize >= 0 && inputSize <= 100) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Method to set how long each iteration of the loop takes (i.e. The sort speed)\n   * @param {The speed at which the array sorts} sortSpeed\n   */\n  isValidSortSpeed(sortSpeed) {\n    while (sortSpeed >= 0 && sortSpeed <= 3000) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Dispatches the action to set our input size in the store\n   * @param {*} event\n   */\n  setAppInputSize = (event) => {\n    let inputSize = event.target.value;\n    if (this.isValidInputSize(inputSize)) {\n      this.setState({\n        inputSize: inputSize,\n        isInputSizeValid: true,\n      });\n      this.props.dispatch({\n        type: \"SET_INPUT_SIZE\",\n        payload: inputSize,\n      });\n      this.props.dispatch({\n        type: \"SET_DATA\",\n        payload: inputSize,\n      });\n    } else {\n      this.setState({\n        isInputSizeValid: false,\n      });\n    }\n  };\n\n  /**\n   * Dispatches the action to change the sort speed of our sort\n   * @param {*} event\n   */\n  setAppSortSpeed = (event) => {\n    let sortSpeed = event.target.value;\n    if (this.isValidSortSpeed(sortSpeed)) {\n      this.setState({\n        isSortSpeedValid: true,\n      });\n      this.props.dispatch({\n        type: \"SET_SORT_SPEED\",\n        payload: sortSpeed,\n      });\n    } else {\n      this.setState({\n        isSortSpeedValid: false,\n      });\n    }\n  };\n\n  /**\n   * Method to dispatch the action to set the algorithm we want to run\n   * @param {The algorithm we want to run} algorithm\n   */\n  setAppAlgorithm = (algorithm) => {\n    this.setState({\n      algorithm: algorithm,\n    });\n    this.props.dispatch({\n      type: \"SET_ALGORITHM\",\n      payload: algorithm,\n    });\n  };\n\n  /**\n   * Method to dispatch the action to run the actual algorithm\n   */\n  runAlgorithm() {\n    this.props.dispatch({\n      type: \"TOGGLE_ALGORITHM_RUNNING\",\n      payload: true,\n    });\n  }\n\n  /**\n   * Method to reset the data (ideally called after an algorithm has been run)\n   */\n  resetData() {\n    this.props.dispatch({\n      type: \"RESET_DATA\",\n      payload: this.props.inputSize,\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark\">\n        <a\n          className=\"navbar-brand\"\n          href={this.props.isAlgorithmRunning ? \"\" : \"#\"}\n        >\n          Sorting Visualizer\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Input Size\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a className=\"dropdown-item\">\n                  <label>Input size</label>\n                </a>\n                <a className=\"dropdown-item\">\n                  <input\n                    className={\n                      this.state.isInputSizeValid === true\n                        ? \"form-control is-valid\"\n                        : \"form-control is-invalid\"\n                    }\n                    placeholder=\"size\"\n                    value={this.state.inputSize}\n                    onChange={(event) => this.setAppInputSize(event)}\n                    disabled={this.props.isAlgorithmRunning}\n                  />\n                </a>\n                <div className=\"dropdown-divider\"></div>\n                <a className=\"dropdown-item\">\n                  <div className=\"\">\n                    <div>\n                      <input\n                        type=\"range\"\n                        value={this.state.inputSize}\n                        className=\"custom-range\"\n                        min=\"5\"\n                        max=\"100\"\n                        step=\"1\"\n                        onChange={(event) => this.setAppInputSize(event)}\n                        disabled={this.props.isAlgorithmRunning}\n                      />\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Algorithm\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a\n                  className=\"dropdown-item\"\n                  onClick={() => this.setAppAlgorithm(algorithms.BUBBLE_SORT)}\n                >\n                  <label className=\"dropdown-item-label\">Bubble Sort</label>\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  onClick={() =>\n                    this.setAppAlgorithm(algorithms.SELECTION_SORT)\n                  }\n                >\n                  <label className=\"dropdown-item-label\">Selection Sort</label>\n                </a>\n              </div>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Speed\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a className=\"dropdown-item\">\n                  <label>Speed of Sort</label>\n                </a>\n                <a className=\"dropdown-item\">\n                  <input\n                    className={\n                      this.state.isSortSpeedValid === true\n                        ? \"form-control is-valid\"\n                        : \"form-control is-invalid\"\n                    }\n                    placeholder=\"speed\"\n                    value={this.state.sortSpeed}\n                    onChange={(event) => this.setAppSortSpeed(event)}\n                    disabled={this.props.isAlgorithmRunning}\n                  />\n                </a>\n                <div className=\"dropdown-divider\"></div>\n                <a className=\"dropdown-item\">\n                  <div className=\"\">\n                    <div>\n                      <input\n                        type=\"range\"\n                        value={this.state.sortSpeed}\n                        className=\"custom-range\"\n                        min=\"0\"\n                        max=\"3000\"\n                        step=\"100\"\n                        onChange={(event) => this.setAppSortSpeed(event)}\n                        disabled={this.props.isAlgorithmRunning}\n                      />\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </li>\n          </ul>\n          <div className=\"header-btn-group\">\n              <button\n                className=\"btn btn-warning run-algorithm-btn\"\n                onClick={() => this.runAlgorithm()}\n                disabled={this.props.isAlgorithmRunning}\n              >\n                Run\n              </button>\n              <button\n                className=\"btn btn-danger reset-data-btn\"\n                onClick={() => this.resetData()}\n                disabled={this.props.isAlgorithmRunning}\n              >\n                Reset\n              </button>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    inputSize: state.inputSize,\n    sortSpeed: state.sortSpeed,\n    algorithm: state.algorithm,\n    data: state.data,\n    isAlgorithmRunning: state.isAlgorithmRunning,\n  };\n};\n\nexport default connect(mapStateToProps)(Header);\n","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Components/Charts/BarChart/BarChart.js",["56","57"],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Reducers/rootReducer.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/Alogrithms/BubbleSort.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/sorting_visualizer/sorting_visualizer/src/constants.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":9},{"ruleId":"62","severity":1,"message":"66","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":14},{"ruleId":"58","replacedBy":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":120,"column":9,"nodeType":"71","endLine":123,"endColumn":10},{"ruleId":"69","severity":1,"message":"70","line":141,"column":15,"nodeType":"71","endLine":149,"endColumn":16},{"ruleId":"69","severity":1,"message":"72","line":153,"column":17,"nodeType":"71","endLine":153,"endColumn":46},{"ruleId":"69","severity":1,"message":"72","line":156,"column":17,"nodeType":"71","endLine":156,"endColumn":46},{"ruleId":"69","severity":1,"message":"72","line":170,"column":17,"nodeType":"71","endLine":170,"endColumn":46},{"ruleId":"69","severity":1,"message":"70","line":189,"column":15,"nodeType":"71","endLine":197,"endColumn":16},{"ruleId":"69","severity":1,"message":"72","line":201,"column":17,"nodeType":"71","endLine":204,"endColumn":18},{"ruleId":"69","severity":1,"message":"72","line":207,"column":17,"nodeType":"71","endLine":212,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":218,"column":15,"nodeType":"71","endLine":226,"endColumn":16},{"ruleId":"69","severity":1,"message":"72","line":230,"column":17,"nodeType":"71","endLine":230,"endColumn":46},{"ruleId":"69","severity":1,"message":"72","line":233,"column":17,"nodeType":"71","endLine":233,"endColumn":46},{"ruleId":"69","severity":1,"message":"72","line":247,"column":17,"nodeType":"71","endLine":247,"endColumn":46},{"ruleId":"73","severity":1,"message":"74","line":216,"column":11,"nodeType":"75","messageId":"76","endLine":217,"endColumn":52},{"ruleId":"73","severity":1,"message":"77","line":218,"column":11,"nodeType":"75","messageId":"78","endLine":219,"endColumn":19},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.",["79"],["80"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","no-global-assign","no-unsafe-negation"]